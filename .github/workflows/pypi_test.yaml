name: "GREEN: Test PyPI Upload Job"

on:
  workflow_dispatch:
  push:
    branches:
      - "test"
    tags:
      - "all"
      - "pypi"
      - "pypi-g"

jobs:

  build_python:
    runs-on: ubuntu-latest
    name: Build Python
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install Tooling
        run: |
          pip install --upgrade pip
          pip install tox==3.28

      # Emulate Build Python
      - name: Build Python in './dist/' folder
        run: tox -e build

      # Emulate Artifacts Upload
      - run: echo ARTIFACTS=unit_test_artifacts >> $GITHUB_OUTPUT
        id: set_artifacts_ref

      - name: Archive Python
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.set_artifacts_ref.outputs.ARTIFACTS }}
          path: dist
    outputs:
      ARTIFACTS: ${{ steps.set_artifacts_ref.outputs.ARTIFACTS }}

  call_pypi:
    name: Password from Repo Secrets
    needs: build_python
    uses: boromir674/automated-workflows/.github/workflows/pypi.yml@test
    with:
      distro_name: cicd_test_workflow
      distro_version: "0.0.1"
      should_trigger: true
      artifacts_path: ${{ needs.build_python.outputs.ARTIFACTS }}
      pypi_server: "testpypi"
      TWINE_USERNAME: "boromir674"
    secrets:
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD_testpypi_from_repo_secrets }}

  call_pypi1:
    name: Creds from Repo Environment
    needs: build_python
    uses: boromir674/automated-workflows/.github/workflows/pypi_env.yml@test
    with:
      distro_name: cicd_test_workflow
      distro_version: "0.0.1"
      should_trigger: true
      pypi_env: "PYPI_TEST"
      artifacts_path: ${{ needs.build_python.outputs.ARTIFACTS }}
      require_wheel: true
      allow_existing: true
    secrets:
      # This magically works, and the environment secret will be loaded
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      # it is really weird to pass a secret here because it feels that is comming from outside,
      # from the repository secrets, not from the environment. But it doesn't!

  # verify_python_distro_uploaded:
  #   runs-on: ubuntu-latest
  #   needs: call_pypi_env
  #   if: always()
  #   steps:
  #     - name: Assert UPLOADED to '${{ inputs.pypi_server }}' PyPI
  #       run: |
  #         TEST_PYPI='https://test.pypi.org/simple/'
  #         pip install --dry-run --no-deps --index-url "${TEST_PYPI}" "${{ inputs.distro_name }}"
